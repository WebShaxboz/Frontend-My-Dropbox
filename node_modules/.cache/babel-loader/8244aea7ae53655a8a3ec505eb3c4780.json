{"ast":null,"code":"import _toConsumableArray from\"/Users/student/Desktop/drop/Frontend-My-Dropbox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/student/Desktop/drop/Frontend-My-Dropbox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Button,Modal,Form}from\"react-bootstrap\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faFolderPlus}from\"@fortawesome/free-solid-svg-icons\";import{database}from\"../../Server/firebase\";import{useAuth}from\"../../contexts/AuthContext\";import{ROOT_FOLDER}from\"../../hooks/useFolder\";import'./AddFolderButton.css';export default function AddFolderButton(_ref){var currentFolder=_ref.currentFolder;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),name=_useState4[0],setName=_useState4[1];var _useAuth=useAuth(),currentUser=_useAuth.currentUser;function openModal(){setOpen(true);}function closeModal(){setOpen(false);}function handleSubmit(e){e.preventDefault();if(currentFolder==null)return;var path=_toConsumableArray(currentFolder.path);if(currentFolder!==ROOT_FOLDER){path.push({name:currentFolder.name,id:currentFolder.id});}database.folders.add({name:name,parentId:currentFolder.id,userId:currentUser.uid,path:path,createdAt:database.getCurrentTimestamp()});setName(\"\");closeModal();}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"button\",{onClick:openModal,className:\"addFolder-container\"},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faFolderPlus,className:\"addFolder-icon\"})),/*#__PURE__*/React.createElement(Modal,{show:open,onHide:closeModal},/*#__PURE__*/React.createElement(Form,{className:\"addFolder-alert\",onSubmit:handleSubmit},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Form.Group,{className:\"adFolder-input-name\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Folder Name\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",required:true,value:name,onChange:function onChange(e){return setName(e.target.value);}}))),/*#__PURE__*/React.createElement(Modal.Footer,{className:\"addFolder-alert-footer\"},/*#__PURE__*/React.createElement(\"button\",{className:\"addFolder-close-btn\",onClick:closeModal},\"Close\"),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},\"Add Folder\")))));}","map":{"version":3,"sources":["/Users/student/Desktop/drop/Frontend-My-Dropbox/src/components/AddFolderButton/AddFolderButton.js"],"names":["React","useState","Button","Modal","Form","FontAwesomeIcon","faFolderPlus","database","useAuth","ROOT_FOLDER","AddFolderButton","currentFolder","open","setOpen","name","setName","currentUser","openModal","closeModal","handleSubmit","e","preventDefault","path","push","id","folders","add","parentId","userId","uid","createdAt","getCurrentTimestamp","target","value"],"mappings":"oVAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,MAAT,CAAiBC,KAAjB,CAAwBC,IAAxB,KAAoC,iBAApC,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,YAAT,KAA6B,mCAA7B,CACA,OAASC,QAAT,KAAyB,uBAAzB,CACA,OAASC,OAAT,KAAwB,4BAAxB,CACA,OAASC,WAAT,KAA4B,uBAA5B,CACA,MAAO,uBAAP,CAEA,cAAe,SAASC,CAAAA,eAAT,MAA4C,IAAjBC,CAAAA,aAAiB,MAAjBA,aAAiB,eACjCV,QAAQ,CAAC,KAAD,CADyB,wCAClDW,IADkD,eAC5CC,OAD4C,8BAEjCZ,QAAQ,CAAC,EAAD,CAFyB,yCAElDa,IAFkD,eAE5CC,OAF4C,4BAGjCP,OAAO,EAH0B,CAGjDQ,WAHiD,UAGjDA,WAHiD,CAKzD,QAASC,CAAAA,SAAT,EAAqB,CACnBJ,OAAO,CAAC,IAAD,CAAP,CACD,CAED,QAASK,CAAAA,UAAT,EAAsB,CACpBL,OAAO,CAAC,KAAD,CAAP,CACD,CAED,QAASM,CAAAA,YAAT,CAAsBC,CAAtB,CAAyB,CACvBA,CAAC,CAACC,cAAF,GAEA,GAAIV,aAAa,EAAI,IAArB,CAA2B,OAE3B,GAAMW,CAAAA,IAAI,oBAAOX,aAAa,CAACW,IAArB,CAAV,CACA,GAAIX,aAAa,GAAKF,WAAtB,CAAmC,CACjCa,IAAI,CAACC,IAAL,CAAU,CAAET,IAAI,CAAEH,aAAa,CAACG,IAAtB,CAA4BU,EAAE,CAAEb,aAAa,CAACa,EAA9C,CAAV,EACD,CAEDjB,QAAQ,CAACkB,OAAT,CAAiBC,GAAjB,CAAqB,CACnBZ,IAAI,CAAEA,IADa,CAEnBa,QAAQ,CAAEhB,aAAa,CAACa,EAFL,CAGnBI,MAAM,CAAEZ,WAAW,CAACa,GAHD,CAInBP,IAAI,CAAEA,IAJa,CAKnBQ,SAAS,CAAEvB,QAAQ,CAACwB,mBAAT,EALQ,CAArB,EAOAhB,OAAO,CAAC,EAAD,CAAP,CACAG,UAAU,GACX,CAED,mBACE,qDACE,8BAAQ,OAAO,CAAED,SAAjB,CAA4B,SAAS,CAAC,qBAAtC,eACE,oBAAC,eAAD,EAAiB,IAAI,CAAEX,YAAvB,CAAoC,SAAS,CAAC,gBAA9C,EADF,CADF,cAIE,oBAAC,KAAD,EAAO,IAAI,CAAEM,IAAb,CAAmB,MAAM,CAAEM,UAA3B,eACE,oBAAC,IAAD,EAAM,SAAS,CAAC,iBAAhB,CAAkC,QAAQ,CAAEC,YAA5C,eACE,4CACE,oBAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,qBAAtB,eACE,oBAAC,IAAD,CAAM,KAAN,oBADF,cAEE,oBAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,MAAnB,CAA0B,QAAQ,KAAlC,CAAmC,KAAK,CAAEL,IAA1C,CAA+C,QAAQ,CAAE,kBAAAM,CAAC,QAAIL,CAAAA,OAAO,CAACK,CAAC,CAACY,MAAF,CAASC,KAAV,CAAX,EAA1D,EAFF,CADF,CADF,cAOE,oBAAC,KAAD,CAAO,MAAP,EAAc,SAAS,CAAC,wBAAxB,eACE,8BAAQ,SAAS,CAAC,qBAAlB,CAAyC,OAAO,CAAEf,UAAlD,UADF,cAIE,8BAAS,IAAI,CAAC,QAAd,eAJF,CAPF,CADF,CAJF,CADF,CAyBD","sourcesContent":["import React, { useState } from \"react\"\r\nimport { Button, Modal, Form } from \"react-bootstrap\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faFolderPlus } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { database } from \"../../Server/firebase\"\r\nimport { useAuth } from \"../../contexts/AuthContext\"\r\nimport { ROOT_FOLDER } from \"../../hooks/useFolder\"\r\nimport './AddFolderButton.css'\r\n\r\nexport default function AddFolderButton({ currentFolder }) {\r\n  const [open, setOpen] = useState(false)\r\n  const [name, setName] = useState(\"\")\r\n  const { currentUser } = useAuth()\r\n\r\n  function openModal() {\r\n    setOpen(true)\r\n  }\r\n\r\n  function closeModal() {\r\n    setOpen(false)\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    if (currentFolder == null) return\r\n\r\n    const path = [...currentFolder.path]\r\n    if (currentFolder !== ROOT_FOLDER) {\r\n      path.push({ name: currentFolder.name, id: currentFolder.id })\r\n    }\r\n\r\n    database.folders.add({\r\n      name: name,\r\n      parentId: currentFolder.id,\r\n      userId: currentUser.uid,\r\n      path: path,\r\n      createdAt: database.getCurrentTimestamp(),\r\n    })\r\n    setName(\"\")\r\n    closeModal()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <button onClick={openModal} className=\"addFolder-container\" >\r\n        <FontAwesomeIcon icon={faFolderPlus}className=\"addFolder-icon\" />\r\n      </button>\r\n      <Modal show={open} onHide={closeModal}>\r\n        <Form className=\"addFolder-alert\" onSubmit={handleSubmit}>\r\n          <div>\r\n            <Form.Group className=\"adFolder-input-name\">\r\n              <Form.Label>Folder Name</Form.Label>\r\n              <Form.Control type=\"text\" required value={name}onChange={e => setName(e.target.value)}/>\r\n            </Form.Group>\r\n          </div>\r\n          <Modal.Footer className=\"addFolder-alert-footer\">\r\n            <button className=\"addFolder-close-btn\"  onClick={closeModal} >\r\n              Close\r\n            </button>\r\n            <button  type=\"submit\">\r\n              Add Folder\r\n            </button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}